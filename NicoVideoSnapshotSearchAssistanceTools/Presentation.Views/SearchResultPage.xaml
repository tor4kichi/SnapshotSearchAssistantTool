<Page
    x:Class="NicoVideoSnapshotSearchAssistanceTools.Presentation.Views.SearchResultPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoVideoSnapshotSearchAssistanceTools.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core" 
  xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:tkControlsPrim="using:Microsoft.Toolkit.Uwp.UI.Controls.Primitives"
  xmlns:winui="using:Microsoft.UI.Xaml.Controls"
  xmlns:conv="using:Microsoft.Toolkit.Uwp.UI.Converters"
  xmlns:myConv="using:NicoVideoSnapshotSearchAssistanceTools.Presentation.Views.Converters" 
  xmlns:viewModels="using:NicoVideoSnapshotSearchAssistanceTools.Presentation.ViewModels" 
  xmlns:ts="using:NicoVideoSnapshotSearchAssistanceTools.Presentation.Views.TemplateSelector" 
  xmlns:nctkSnapshot="using:NiconicoToolkit.SnapshotSearch.Filters"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions"
  mc:Ignorable="d"
  x:Name="PageRoot"
    >

  <Page.Resources>
    <local:DictionaryVisibilityConverter x:Key="DictionaryVisibilityConverter" />

    <Style TargetType="Grid" x:Key="MicaCardGirdStyle">
      <Setter Property="Background" Value="{ThemeResource LayerFillColorDefaultBrush}" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Padding" Value="16 8" />
      <Setter Property="CornerRadius" Value="8" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
    </Style>

    <MenuFlyout x:Key="FilterItemFlyout">
      <MenuFlyoutItem Text="{i18nExt:Localize Key=Delete}" Icon="Delete" Command="{Binding RemoveCommand}" />
    </MenuFlyout>
    
    <ts:SimpleFilterTemplateSelector x:Key="SimpleFilterTemplateSelector">
      <ts:SimpleFilterTemplateSelector.DateTimeOffsetTemplate>
        <DataTemplate x:DataType="viewModels:DateTimeOffsetSearchResultFilterViewModel">
          <Button ContextFlyout="{StaticResource FilterItemFlyout}">
            <StackPanel Orientation="Horizontal" Spacing="8">
              <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
              <TextBlock Text="{x:Bind Comparison, Mode=OneWay, Converter={StaticResource ComparisonToCharacterSymbolConverter}}" />
              <TextBlock Text="{x:Bind Value, Mode=OneWay, Converter={StaticResource HumanReadableDateTimeConverter}, ConverterParameter=g}" />
            </StackPanel>

            <Button.Flyout>
              <Flyout Placement="Bottom">
                <Grid Margin="16 0">
                  <StackPanel Spacing="8">
                    <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Spacing="16">

                      <ComboBox ItemsSource="{x:Bind Comparisons}"
                                  SelectedItem="{x:Bind Comparison, Mode=TwoWay}"
                                      ItemTemplate="{StaticResource LocalizedTextBlock}"         
                                      MinWidth="80"
                                  >
                      </ComboBox>

                      <TextBox Text="{x:Bind Value, Mode=OneWay, Converter={StaticResource HumanReadableDateTimeConverter}, ConverterParameter=g}" IsReadOnly="True" />
                      <Button>
                        <Button.Flyout>
                          <DatePickerFlyout Date="{x:Bind Date, Mode=TwoWay}" />
                        </Button.Flyout>
                        <SymbolIcon Symbol="Calendar" />
                      </Button>
                      <Button>
                        <Button.Flyout>
                          <TimePickerFlyout Time="{x:Bind Time, Mode=TwoWay}" />
                        </Button.Flyout>
                        <SymbolIcon Symbol="Clock" />
                      </Button>
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Flyout>
            </Button.Flyout>
          </Button>
        </DataTemplate>
      </ts:SimpleFilterTemplateSelector.DateTimeOffsetTemplate>
      <ts:SimpleFilterTemplateSelector.TimeSpanTemplate>
        <DataTemplate x:DataType="viewModels:TimeSpanSearchResultFilterViewModel">
          <Button ContextFlyout="{StaticResource FilterItemFlyout}">
            <StackPanel Orientation="Horizontal" Spacing="8">
              <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
              <TextBlock Text="{x:Bind Comparison, Mode=OneWay, Converter={StaticResource ComparisonToCharacterSymbolConverter}}" />
              <TextBlock Text="{x:Bind Value, Mode=OneWay, Converter={StaticResource HumanReadableDateTimeConverter}, ConverterParameter=g}" />
            </StackPanel>

            <Button.Flyout>
              <Flyout Placement="Bottom">
                <Grid Margin="16 0">
                  <StackPanel Spacing="8">
                    <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Spacing="16">

                      <ComboBox ItemsSource="{x:Bind Comparisons}"
                                  SelectedItem="{x:Bind Comparison, Mode=TwoWay}"
                                      ItemTemplate="{StaticResource LocalizedTextBlock}"
                                    MinWidth="80"
                                  >
                      </ComboBox>

                      <StackPanel Orientation="Horizontal" Spacing="8">
                        <winui:NumberBox Value="{x:Bind Hours, Mode=TwoWay}" Minimum="0" Maximum="24" SmallChange="1" ToolTipService.ToolTip="時" />
                        <TextBlock Text=":" FontSize="20" FontWeight="SemiBold" />
                        <winui:NumberBox Value="{x:Bind Minutes, Mode=TwoWay}" Minimum="0" Maximum="59" SmallChange="1" ToolTipService.ToolTip="分" />
                        <TextBlock Text=":" FontSize="20" FontWeight="SemiBold" />
                        <winui:NumberBox Value="{x:Bind Seconds, Mode=TwoWay}" Minimum="0" Maximum="59" SmallChange="1" ToolTipService.ToolTip="秒" />
                      </StackPanel>
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Flyout>
            </Button.Flyout>
          </Button>
        </DataTemplate>
      </ts:SimpleFilterTemplateSelector.TimeSpanTemplate>

      <ts:SimpleFilterTemplateSelector.IntTemplate>
        <DataTemplate x:DataType="viewModels:IntSearchResultFilterViewModel">
          <Button ContextFlyout="{StaticResource FilterItemFlyout}">
            <StackPanel Orientation="Horizontal" Spacing="8">
              <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
              <TextBlock Text="{x:Bind Comparison, Mode=OneWay, Converter={StaticResource ComparisonToCharacterSymbolConverter}}" />
              <TextBlock Text="{x:Bind Value, Mode=OneWay}" />
            </StackPanel>

            <Button.Flyout>
              <Flyout Placement="Bottom">
                <Grid Margin="16 0">
                  <StackPanel Spacing="8">
                    <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Spacing="16">

                      <ComboBox ItemsSource="{x:Bind Comparisons}"
                                  SelectedItem="{x:Bind Comparison, Mode=TwoWay}"
                                      ItemTemplate="{StaticResource LocalizedTextBlock}"
                                    MinWidth="100"
                                  >
                      </ComboBox>

                      <winui:NumberBox Value="{x:Bind Value, Mode=TwoWay}" Minimum="0" LargeChange="1000" SmallChange="100" />
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Flyout>
            </Button.Flyout>
          </Button>
        </DataTemplate>
      </ts:SimpleFilterTemplateSelector.IntTemplate>
      <ts:SimpleFilterTemplateSelector.StringTemplate>
        <DataTemplate x:DataType="viewModels:StringSearchResultFilterViewModel">
          <Button ContextFlyout="{StaticResource FilterItemFlyout}">
            <StackPanel Orientation="Horizontal" Spacing="8">
              <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
              <TextBlock Text="{x:Bind Comparison, Mode=OneWay, Converter={StaticResource LocalizeConverter}}" />
              <TextBlock Text="{x:Bind Value, Mode=OneWay}" />
            </StackPanel>

            <Button.Flyout>
              <Flyout Placement="Bottom">
                <Grid Margin="16 0">
                  <StackPanel>
                    <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Spacing="16">
                      <ComboBox ItemsSource="{x:Bind Comparisons}"
                                SelectedItem="{x:Bind Comparison}"
                                ItemTemplate="{StaticResource LocalizedTextBlock}"
                                MinWidth="80"
                                >
                      </ComboBox>

                      <AutoSuggestBox Text="{x:Bind Value, Mode=TwoWay}"
                                            ItemsSource="{x:Bind SuggestionItems}"
                                            MinWidth="120"
                                            >
                        <i:Interaction.Behaviors>
                          <core:EventTriggerBehavior EventName="GotFocus">
                            <core:ChangePropertyAction PropertyName="IsSuggestionListOpen" Value="True" />
                          </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <AutoSuggestBox.TextBoxStyle>
                          <Style TargetType="TextBox"></Style>
                        </AutoSuggestBox.TextBoxStyle>
                      </AutoSuggestBox>
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Flyout>
            </Button.Flyout>
          </Button>
        </DataTemplate>
      </ts:SimpleFilterTemplateSelector.StringTemplate>
      <ts:SimpleFilterTemplateSelector.ScoreTemplate>
        <DataTemplate x:DataType="viewModels:ScoreSnapshotResultFilterViewModel">
          <Button ContextFlyout="{StaticResource FilterItemFlyout}">
            <StackPanel Orientation="Horizontal" Spacing="8">
              <TextBlock Text="{i18nExt:Localize Key=CustomFieldType_Score}" VerticalAlignment="Center" />
              <TextBlock Text="{x:Bind Comparison, Mode=OneWay, Converter={StaticResource ComparisonToCharacterSymbolConverter}}" />
              <TextBlock Text="{x:Bind Value, Mode=OneWay}" />
            </StackPanel>

            <Button.Flyout>
              <Flyout Placement="Bottom">
                <Grid Margin="16 0">
                  <StackPanel Spacing="8">
                    <TextBlock Text="{x:Bind FieldType, Converter={StaticResource LocalizeConverter}}" VerticalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Spacing="16">

                      <ComboBox ItemsSource="{x:Bind Comparisons}"
                                  SelectedItem="{x:Bind Comparison, Mode=TwoWay}"
                                      ItemTemplate="{StaticResource LocalizedTextBlock}"
                                    MinWidth="100"
                                  >
                      </ComboBox>

                      <winui:NumberBox Value="{x:Bind Value, Mode=TwoWay}" Minimum="0" LargeChange="1000" SmallChange="100" />
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Flyout>
            </Button.Flyout>
          </Button>
        </DataTemplate>
      </ts:SimpleFilterTemplateSelector.ScoreTemplate>
    </ts:SimpleFilterTemplateSelector>


    <DataTemplate x:Key="ComparisonTemplate" x:DataType="nctkSnapshot:SimpleFilterComparison">
      <TextBlock Text="{x:Bind Converter={StaticResource ComparisonToCharacterSymbolConverter}}" />
    </DataTemplate>
  </Page.Resources>
  <Grid>
    <controls:DockPanel>
      <controls:DockPanel controls:DockPanel.Dock="Top" 
                          Padding="0 0"
                          MaxWidth="1200"
                          >
        <StackPanel x:Name="Header_InfoLayout" Orientation="Horizontal" controls:DockPanel.Dock="Right" Spacing="16" Background="{StaticResource ApplicationPageHeaderBackground}"
                    Padding="16 8"
                    >
          <TextBlock VerticalAlignment="Center">
            合計：<Run Text="{x:Bind ViewModel.ResultMeta.TotalCount, Mode=OneWay}" />件<LineBreak />
            表示：<Run Text="{x:Bind ViewModel.ItemsView.Count, Mode=OneWay}" />件
          </TextBlock>

          <TextBlock HorizontalTextAlignment="Right" VerticalAlignment="Center" Opacity="0.75" IsTextSelectionEnabled="True">
                  <Run Text="{i18nExt:Localize Key=SnapshotAPIVersion}" /> <LineBreak /> <Run  Text="{x:Bind ViewModel.ResultMeta.SnapshotVersion, Converter={StaticResource HumanReadableDateTimeConverter}, Mode=OneWay}" />
          </TextBlock>


          <Button >
            <Button.Content>
              <StackPanel Orientation="Horizontal" Spacing="16">
                <TextBlock VerticalAlignment="Center" >
                  <Run Text="{i18nExt:Localize Key=SearchQueryCondition}" /> <LineBreak /> <Run Text="{x:Bind ViewModel.SearchQueryVM.Keyword, Mode=OneWay}" />
                </TextBlock>

              </StackPanel>
            </Button.Content>

            <Button.Flyout>
              <Flyout Placement="Bottom">
                <StackPanel HorizontalAlignment="Stretch">
                  <TextBlock Text="{i18nExt:Localize Key=SearchQueryString}" Opacity="0.7" />
                  <TextBlock Text="{x:Bind ViewModel.ResultMeta.SearchQueryId, Converter={StaticResource UrlEncodeConverter}, Mode=OneWay}" 
                             TextWrapping="WrapWholeWords" 
                             IsTextSelectionEnabled="True"
                             MaxWidth="320"
                             />
                </StackPanel>
              </Flyout>
            </Button.Flyout>
          </Button>
          <Button Content="{i18nExt:Localize Key=Export}" Style="{ThemeResource AccentButtonStyle}">
            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="Tapped">
                <core:GoToStateAction StateName="VS_ShowExportPane" />
              </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
          </Button>
        </StackPanel>

        <StackPanel x:Name="Header_FilterLayout" Orientation="Vertical" Spacing="8" controls:DockPanel.Dock="Left"
                    Background="{StaticResource ApplicationPageHeaderBackground}"
                    Padding="16 8"
                    >

          <StackPanel Orientation="Horizontal" Spacing="8">
            <DropDownButton>
              <DropDownButton.Flyout>
                <MenuFlyout Placement="BottomEdgeAlignedLeft">
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=CustomFieldType_Score}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="Score" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.Title}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="Title" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.Description}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="Description" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.StartTime}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="StartTime" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.ViewCounter}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="ViewCounter" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.MylistCounter}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="MylistCounter" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.LikeCounter}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="LikeCounter" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.LengthSeconds}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="LengthSeconds" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.CommentCounter}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="CommentCounter" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.LastCommentTime}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="LastCommentTime" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.CategoryTags}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="CategoryTags" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.Tags}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="Tags" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.TagsExact}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="TagsExact" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.Genre}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="Genre" />
                  <MenuFlyoutItem Text="{i18nExt:Localize Key=SearchFieldType.GenreKeyword}" Command="{Binding AddSimpleFilterCommand}" CommandParameter="GenreKeyword" />
                </MenuFlyout>
              </DropDownButton.Flyout>
              <!--
              <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Tapped">
                  <core:GoToStateAction StateName="VS_ShowFilterEditPane" />
                </core:EventTriggerBehavior>
              </i:Interaction.Behaviors>
              -->

              <StackPanel Orientation="Horizontal" Spacing="8">
                <SymbolIcon Symbol="Filter" />
                <TextBlock Text="{i18nExt:Localize Key=SearchFilter}" VerticalAlignment="Center" />
              </StackPanel>
            </DropDownButton>

            <ToggleSwitch x:Name="AutoRefreshSwitch" IsOn="{Binding IsAutoRefreshEnabled.Value}" 
                          OnContent="{i18nExt:Localize Key=AutoRefreshEnabled}"
                          OffContent="{i18nExt:Localize Key=AutoRefreshDisabled}"
                          Padding="0" Margin="0"
                          />

            <Button x:Name="RefreshButton" Command="{Binding RefreshFilterCommand}" IsEnabled="{Binding CanRefresh.Value}">
              <SymbolIcon Symbol="Refresh" />
            </Button>
            
          </StackPanel>

          <ItemsControl x:Name="Header_FilterItems" ItemsSource="{Binding Filters}"
                    ItemTemplateSelector="{StaticResource SimpleFilterTemplateSelector}"                      
                      VerticalAlignment="Center"
                        ContextFlyout="{StaticResource FilterItemFlyout}"
                        MaxWidth="400"
                        HorizontalAlignment="Left"
                    >
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="8" VerticalSpacing="8" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
          </ItemsControl>
        </StackPanel>

        
      </controls:DockPanel>

      <SplitView x:Name="ScoringPaneSplitView" IsPaneOpen="False"
                 DisplayMode="Inline"
                 OpenPaneLength="420"
                 >

        <i:Interaction.Behaviors>
          <core:EventTriggerBehavior EventName="PaneClosed">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.ScoringVM.SaveScoringSettingsCommand, Mode=OneWay}" />
            <core:InvokeCommandAction Command="{x:Bind ViewModel.ReCulcScoreCommand, Mode=OneWay}" />
            <core:ChangePropertyAction TargetObject="{x:Bind ScoreEdittingUIContainer}" PropertyName="Visibility" Value="Collapsed" />
            <core:ChangePropertyAction TargetObject="{x:Bind ExportUIContainer}" PropertyName="Visibility" Value="Collapsed" />
          </core:EventTriggerBehavior>
        </i:Interaction.Behaviors>

        <SplitView.Pane>
          <Grid>
            <controls:DockPanel x:Name="ScoreEdittingUIContainer" Visibility="Collapsed">

              <controls:DockPanel controls:DockPanel.Dock="Top" Margin="16 16 16 8">
                <Button controls:DockPanel.Dock="Right" Margin="0 0 0 0"
                      >
                  <Button.Content>
                    <SymbolIcon Symbol="ClosePane" />
                  </Button.Content>

                  <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                      <core:GoToStateAction TargetObject="{x:Bind PageRoot}" StateName="VS_ClosePane" />
                    </core:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                </Button>

                <Button controls:DockPanel.Dock="Right" Margin="8 0 8 0">
                  <Button.Content>
                    <SymbolIcon Symbol="Help" />
                  </Button.Content>

                  <Button.Flyout>
                    <Flyout>
                      <TextBlock>
                        <Run Text="V = 再生数" /><LineBreak />
                        <Run Text="C = コメント数" /><LineBreak />
                        <Run Text="M = マイリスト数" /><LineBreak />
                        <Run Text="L = いいね数" /><LineBreak />
                        <Run Text="Limit(value, max)" /><LineBreak />
                        <Run Text="Clamp(value, min, max)" /><LineBreak />
                      </TextBlock>
                    </Flyout>
                  </Button.Flyout>
                </Button>


                <TextBlock Text="{i18nExt:Localize Key=ScoreCulcExpression}" Margin="4 0 0 0" Style="{StaticResource SubtitleTextBlockStyle}" />
              </controls:DockPanel>

              <controls:DockPanel controls:DockPanel.Dock="Top" Padding="16">


                <ComboBox ItemsSource="{x:Bind ViewModel.ScoringVM.SettingItems, Mode=OneWay}"
                        SelectedItem="{x:Bind ViewModel.ScoringVM.CurrentScoringSetting.Value, Mode=TwoWay}"
                        controls:DockPanel.Dock="Left"
                          Header="{i18nExt:Localize Key=ScoreCulcExprettion_Currently}"
                        >
                  <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:ScoringExpressionItemViewModel">
                      <TextBlock Text="{x:Bind Title.Value, Mode=OneWay}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>


                <Button controls:DockPanel.Dock="Right"
                      Command="{x:Bind ViewModel.ScoringVM.AddScoringExpressionCommand, Mode=OneWay}"
                        Margin="8 0 0 0"
                      >
                  <Button.Content>
                    <SymbolIcon Symbol="Add" />
                  </Button.Content>
                </Button>

                <Button Command="{x:Bind ViewModel.ReCulcScoreCommand, Mode=OneWay}" Margin="8 0 0 0"
                        controls:DockPanel.Dock="Right"
                        >
                  <Button.Content>
                    <SymbolIcon Symbol="Refresh" />
                  </Button.Content>
                </Button>

                <Border />

              </controls:DockPanel>

              <ScrollViewer>
                <ItemsControl ItemsSource="{x:Bind ViewModel.ScoringVM.SettingItems, Mode=OneWay}"
                          ScrollViewer.VerticalScrollMode="Enabled"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          >
                  <ItemsControl.Resources>
                    <MenuFlyout x:Key="ExpressionItemFlyout" 
                              xmlns:myInteractions="using:NicoVideoSnapshotSearchAssistanceTools.Presentation.Views.Interactions"
                              myInteractions:FlyoutExtensions.DataContextPropagationToFlyoutChild="True"
                              >
                      <MenuFlyoutItem Text="{i18nExt:Localize Key=Delete}" Icon="Delete" Command="{Binding ToggleRemoveRequestedCommand}" />
                    </MenuFlyout>
                  </ItemsControl.Resources>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:ScoringExpressionItemViewModel">
                      <Grid Style="{ThemeResource MicaCardGirdStyle}"
                          ContextFlyout="{StaticResource ExpressionItemFlyout}"
                          >

                        <Button Content="{i18nExt:Localize Key=UnDo}" Command="{x:Bind ToggleRemoveRequestedCommand}"
                              Visibility="{x:Bind IsRemoveRequested, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                              />
                        <StackPanel Spacing="16" Visibility="{x:Bind IsRemoveRequested, Mode=OneWay, Converter={StaticResource InvBoolToVisibilityConverter}}">

                          <TextBox Text="{x:Bind Title.Value, Mode=TwoWay}" Header="{i18nExt:Localize Key=ScoreSettingItem_Title}" />

                          <!--
                        <controls:DockPanel Visibility="Collapsed" >
                          <Button Command="{x:Bind AddVariableDeclarationCommand}" controls:DockPanel.Dock="Right">
                            <SymbolIcon Symbol="Add" />
                          </Button>
                          <TextBlock Text="変数定義" VerticalAlignment="Center" /> 
                        </controls:DockPanel>
                        <ItemsControl ItemsSource="{x:Bind VariableDeclarations, Mode=OneWay}">
                          <ItemsControl.ItemTemplate>
                            <DataTemplate x:DataType="viewModels:VariableDeclarationViewModel">
                              <Grid>

                                <Grid Visibility="{x:Bind  IsRemoveRequested, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                                  <Button Content="元に戻す" Command="{x:Bind ToggleRemoveRequestedCommand}" />
                                </Grid>
                                
                                <controls:DockPanel Visibility="{x:Bind  IsRemoveRequested, Converter={StaticResource InvBoolToVisibilityConverter}, Mode=OneWay}">
                                  <StackPanel Orientation="Horizontal" controls:DockPanel.Dock="Left" VerticalAlignment="Center">
                                    <TextBox Text="{x:Bind VariableName, Mode=TwoWay}" />
                                    <TextBlock Text="=" VerticalAlignment="Center" Margin="4 0" FontSize="20" FontWeight="Bold" />
                                  </StackPanel>

                                  <StackPanel Orientation="Horizontal" controls:DockPanel.Dock="Right">
                                    <Button Command="{x:Bind ToggleRemoveRequestedCommand}"
                                            ToolTipService.ToolTip="削除"
                                            >
                                      <Button.Content>
                                        <SymbolIcon Symbol="Delete" />
                                      </Button.Content>
                                    </Button>
                                  </StackPanel>

                                  <TextBox Text="{x:Bind ExpressionText, Mode=TwoWay}" HorizontalAlignment="Stretch"
                                         TextWrapping="Wrap"
                                         />
                                </controls:DockPanel>
                              </Grid>
                              
                            </DataTemplate>
                          </ItemsControl.ItemTemplate>
                          
                        </ItemsControl>
                        -->

                          <TextBox Text="{x:Bind ScoreCulcExpressionText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                                 Header="{i18nExt:Localize Key=ScoreCulcExpression}"
                                         TextWrapping="Wrap"
                                         />

                          <TextBlock Text="{x:Bind ErrorMessage, Mode=OneWay}" Foreground="Red" TextWrapping="WrapWholeWords"
                                   Visibility="{x:Bind HasError, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                   />
                        </StackPanel>
                      </Grid>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </ScrollViewer>

            </controls:DockPanel>

            <controls:DockPanel x:Name="ExportUIContainer" Visibility="Collapsed">

              <controls:DockPanel controls:DockPanel.Dock="Top" Margin="16 16 16 8">
                <Button controls:DockPanel.Dock="Right" Margin="0 0 0 0"
                      ToolTipService.ToolTip="{i18nExt:Localize Key=Close}"
                      >
                  <Button.Content>
                    <SymbolIcon Symbol="ClosePane" />
                  </Button.Content>

                  <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                      <core:GoToStateAction TargetObject="{x:Bind PageRoot}" StateName="VS_ClosePane" />
                    </core:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                </Button>


                <TextBlock Text="{i18nExt:Localize Key=ExportSearchResultTitle}"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           />
              </controls:DockPanel>

              <Border controls:DockPanel.Dock="Bottom" Padding="16"
                BorderThickness="0 1 0 0" BorderBrush="{ThemeResource ButtonDisabledBorderThemeBrush}"
                >
                <controls:DockPanel>
                  <ComboBox ItemsSource="{Binding ExportSupportTypeItems}"
                        SelectedItem="{Binding ExportSupportType, Mode=TwoWay}"
                        ItemTemplate="{StaticResource LocalizedTextBlock}"
                        Header="{i18nExt:Localize Key=ExportFormatTitle}"
                          controls:DockPanel.Dock="Left"
                        >
                  </ComboBox>

                  <Button Content="{i18nExt:Localize Key=ExecuteExport}" Style="{ThemeResource AccentButtonStyle}" Command="{x:Bind ViewModel.ExportCommand}"
                        controls:DockPanel.Dock="Right"
                        MinWidth="120"
                        VerticalAlignment="Bottom"
                        >
                  </Button>

                  <Border />
                </controls:DockPanel>
              </Border>

              <ScrollViewer>
                <StackPanel Spacing="16" Margin="16">
                  <StackPanel Spacing="8">
                    <TextBlock Text="{i18nExt:Localize Key=ExportFieldNameTitle}" />
                    <ItemsControl ItemsSource="{Binding ExportSettingItems}" Margin="16 0 0 0">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <CheckBox Content="{Binding Label}"
                                  IsChecked="{Binding IsExport, Mode=TwoWay}"
                                  />
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </StackPanel>
                </StackPanel>
              </ScrollViewer>
            </controls:DockPanel>
          </Grid>
        </SplitView.Pane>

        <SplitView.Content>
          <controls:DataGrid ItemsSource="{x:Bind ViewModel.ItemsView, Mode=OneWay}"
                       AutoGenerateColumns="False"
                       IsReadOnly="True"
                       GridLinesVisibility="All"
                       MaxColumnWidth="320"
                       FontSize="12"
                       Sorting="DataGrid_Sorting"
                             AlternatingRowBackground="{StaticResource SystemAltMediumColor}"
                       >

            <controls:DataGrid.Resources>
              <Flyout x:Name="ScoreResultItemFlyout" 
                xmlns:myInteractions="using:NicoVideoSnapshotSearchAssistanceTools.Presentation.Views.Interactions"
                myInteractions:FlyoutExtensions.DataContextPropagationToFlyoutChild="True"
                Placement="RightEdgeAlignedTop"
                >
                <i:Interaction.Behaviors>
                  <core:EventTriggerBehavior EventName="Closing">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.ReCulcScoreCommand, Mode=OneWay}" />
                  </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <StackPanel Spacing="16">

                  <ComboBox ItemsSource="{x:Bind ViewModel.ScoringVM.SettingItems, Mode=OneWay}"
                            SelectedItem="{x:Bind ViewModel.ScoringVM.CurrentScoringSetting.Value, Mode=TwoWay}"
                            >
                    <ComboBox.ItemTemplate>
                      <DataTemplate x:DataType="viewModels:ScoringExpressionItemViewModel">
                        <TextBlock Text="{x:Bind Title.Value}" />
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>

                  <Button x:Name="Button_ScoreCulcExpression_Edit" Content="{i18nExt:Localize Key=ScoreCulcExpression_Edit}" Tapped="Button_ScoreCulcExpression_Edit_Tapped">

                    <!-- リリースビルド時に CallMethodAction の部分でエラーが出るのでTappedで表示している -->
                    <!--<i:Interaction.Behaviors>
                      <core:EventTriggerBehavior EventName="Tapped">
                        <core:CallMethodAction TargetObject="{x:Bind ScoreResultItemFlyout}" MethodName="Hide"/>
                        <core:GoToStateAction TargetObject="{x:Bind PageRoot}" StateName="VS_ShowScoreEditPane" />
                      </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>-->
                  </Button>

                  <TextBlock Text="{i18nExt:Localize Key=ScoreCulcExprettion_ReCulcWhenPopupClosed}" TextWrapping="Wrap" MaxWidth="120" Opacity="0.75" />

                </StackPanel>
              </Flyout>
            </controls:DataGrid.Resources>
            <controls:DataGrid.ColumnHeaderStyle>
              <Style TargetType="tkControlsPrim:DataGridColumnHeader">
                <Setter Property="Background" Value="{StaticResource ApplicationPageHeaderBackground}" />
              </Style>
            </controls:DataGrid.ColumnHeaderStyle>
            <controls:DataGrid.Columns>
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=CustomFieldType_Score}" 
                Binding="{Binding Score, Mode=OneWay}" Tag="Score" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=Score, Mode=OneWay}"                           
                >
                <controls:DataGridTextColumn.HeaderStyle>
                  <Style TargetType="tkControlsPrim:DataGridColumnHeader">
                    <Setter Property="ContextFlyout" Value="{StaticResource ScoreResultItemFlyout}" />
                    <Setter Property="Background" Value="{StaticResource ApplicationPageHeaderBackground}" />
                  </Style>
                </controls:DataGridTextColumn.HeaderStyle>
              </controls:DataGridTextColumn>

              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=CustomFieldType_Index}" 
                Binding="{Binding Index, Mode=OneWay}" Tag="Index" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=Index, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.ContentId}"
                Binding="{Binding ContentId, Mode=OneWay}" Tag="ContentId" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=ContentId, Mode=OneWay}"
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.Title}"
                Binding="{Binding Title, Mode=OneWay}" Tag="Title" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=Title, Mode=OneWay}" 
                FontSize="12" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.StartTime}"
                Binding="{Binding StartTime, Mode=OneWay, Converter={StaticResource HumanReadableDateTimeConverter}}" 
                Tag="StartTime" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=StartTime, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.LengthSeconds}"
                Binding="{Binding LengthSeconds, Mode=OneWay, Converter={StaticResource SecondsToReadableTimeConverter}}" 
                Tag="LengthSeconds" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=LengthSeconds, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.ViewCounter}"
                Binding="{Binding ViewCounter, Mode=OneWay}"
                Tag="ViewCounter" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=ViewCounter, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.MylistCounter}"
                Binding="{Binding MylistCounter, Mode=OneWay}"
                Tag="MylistCounter" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=MylistCounter, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.CommentCounter}"
                Binding="{Binding CommentCounter, Mode=OneWay}" 
                Tag="CommentCounter" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=CommentCounter, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.LikeCounter}"
                Binding="{Binding LikeCounter, Mode=OneWay}" 
                Tag="LikeCounter" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=LikeCounter, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.Genre}"
                Binding="{Binding Genre, Mode=OneWay}" 
                Tag="Genre" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=Genre, Mode=OneWay}" 
                CanUserSort="False" 
                />
              <controls:DataGridTextColumn
                Header="{i18nExt:Localize Key=SearchFieldType.CategoryTags}"
                Binding="{Binding CategoryTags, Mode=OneWay}" 
                Tag="CategoryTags" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=CategoryTags, Mode=OneWay}" 
                CanUserSort="False" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.Tags}"
                Binding="{Binding Tags, Mode=OneWay}"
                Tag="Tags" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=Tags, Mode=OneWay}" 
                CanUserSort="False"  
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.Description}"
                Binding="{Binding Description, Mode=OneWay}" 
                Tag="Description" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=Description, Mode=OneWay}" 
                CanUserSort="False" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.LastResBody}"
                Binding="{Binding LastResBody, Mode=OneWay}" 
                Tag="LastResBody" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=LastResBody, Mode=OneWay}" 
                CanUserSort="False" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.UserId}"
                Binding="{Binding UserId, Mode=OneWay}" 
                Tag="UserId" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=UserId, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.ChannelId}"
                Binding="{Binding ChannelId, Mode=OneWay}" 
                Tag="ChannelId" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=ChannelId, Mode=OneWay}" 
                />
              <controls:DataGridTextColumn 
                Header="{i18nExt:Localize Key=SearchFieldType.ThumbnailUrl}"
                Binding="{Binding ThumbnailUrl.OriginalString, Mode=OneWay}" 
                Tag="ThumbnailUrl" 
                Visibility="{x:Bind ViewModel.VisibilityMap, Converter={StaticResource DictionaryVisibilityConverter}, ConverterParameter=ThumbnailUrl, Mode=OneWay}" 
                CanUserSort="False" 
                />

            </controls:DataGrid.Columns>
          </controls:DataGrid>
        </SplitView.Content>
      </SplitView>
      
      
    </controls:DockPanel>

    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="900" />
          </VisualState.StateTriggers>

          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>

          <VisualState.Setters>
            <Setter Target="Header_InfoLayout.(controls:DockPanel.Dock)" Value="Top" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>



      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowRefreshing.Value}" />
          </VisualState.StateTriggers>

          <VisualState.Setters>
            <Setter Target="ScoringPaneSplitView.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


      <VisualStateGroup x:Name="VSG_PaneDisplay">
        <VisualState x:Name="VS_ShowScoreEditPane">
          <VisualState.Setters>
            <Setter Target="ScoreEdittingUIContainer.Visibility" Value="Visible" />
            <Setter Target="ScoringPaneSplitView.IsPaneOpen" Value="True" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="VS_ShowExportPane">
          <VisualState.Setters>
            <Setter Target="ExportUIContainer.Visibility" Value="Visible" />
            <Setter Target="ScoringPaneSplitView.IsPaneOpen" Value="True" />
            <Setter Target="ScoringPaneSplitView.PanePlacement" Value="Right" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="VS_ClosePane">
          <VisualState.Setters>
            <Setter Target="ScoringPaneSplitView.IsPaneOpen" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>

  